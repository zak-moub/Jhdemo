defaults:
  #JAVA_HOME: 1.8
  run:
    shell: bash
    #working-directory: scripts

name: Application CI
on: 
  push:
      branches:
        - develop
        - '**/feature.*/'
        - master
  pull_request:
      branches:
        - master
  release:
      # Only use the types keyword to narrow down the activity types that will trigger your workflow.
      types: [published, created, edited]
      branches:
        - '**/release.*/'
      tags:
        - v*
jobs:
    pipelinejob:
        name: jhdemo_pipeline
        runs-on: ubuntu-latest #ubuntu 18.04 lts
        if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.pull_request.title, '[skip ci]') && !contains(github.event.pull_request.title, '[ci skip]')"
        timeout-minutes: 40
        env:
            NODE_VERSION: 12.16.1
            SPRING_OUTPUT_ANSI_ENABLED: DETECT
            SPRING_JPA_SHOW_SQL: false
            JHI_DISABLE_WEBPACK_LOGS: true
            NG_CLI_ANALYTICS: false
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v1
              with:
                  node-version: 12.16.1
            - uses: actions/setup-java@v1
              with:
                  java-version: '11.x'
            - name: Install node.js packages
              run: npm install
            - name: Run backend test
              run: |
                  chmod +x mvnw
                  ./mvnw -ntp clean verify -P-webpack
            - name: Run frontend test
              run: npm run test
            - name: Analyze code with SonarQube
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
              continue-on-error: true
              run: |
                  if [ -n $SONAR_TOKEN ]; then
                       echo start VERIFY to sonar...
                      ./mvnw -Pprod clean verify sonar:sonar -Dsonar.organization=bilonjea -Dsonar.host.url=https://sonarcloud.io
                      echo end VERIFY to sonar...
                      echo start PUSH to sonar...
                      ./mvnw -ntp initialize sonar:sonar -Dsonar.organization=bilonjea -Dsonar.host.url=https://sonarcloud.io
                      echo end PUSH to sonar...
                  else
                      echo No SONAR_TOKEN, skipping...
                  fi
            - name: Package application
              run: ./mvnw -ntp package deploy -Pprod -DskipTests
            - name: Deploy to Heroku
              if: github.event_name == 'push' && github.ref == 'refs/heads/master'
              env:
                  HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
              run: ./mvnw -ntp com.heroku.sdk:heroku-maven-plugin:2.0.5:deploy -DskipTests -Pprod -Dheroku.buildpacks=heroku/java -Dheroku.appName=${{ secrets.HEROKU_APP_NAME }}
            - name: Build and publish docker image
              if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/'))
              run: |
                  GIT_TAG=:${GITHUB_REF#refs/tags/}
                  DOCKER_TAG=${GIT_TAG#:refs/heads/master}
                  ./mvnw -ntp jib:build -Djib.to.image=jhipster/letizjhdemo${DOCKER_TAG} -Djib.to.auth.username="${{ secrets.DOCKER_USERNAME }}" -Djib.to.auth.password="${{ secrets.DOCKER_PASSWORD }}"

    realesejob:
        name: release_pipeline
        needs: pipelinejob
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2

    deploymentjob:
        name: deploy_pipeline
        needs: [pipelinejob, realesejob]
        runs-on: ubuntu-20.04
        steps:
            - uses: actions/checkout@v2